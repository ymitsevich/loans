name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: loans
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres -d loans"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: python -m pip install --upgrade pip poetry

      - name: Install dependencies
        run: poetry install

      - name: Prepare database schema
        env:
          DATABASE_URL: postgresql+asyncpg://postgres:postgres@localhost:5432/loans
        run: poetry run python scripts/init_db.py

      - name: Lint
        run: poetry run ruff check src tests

      - name: Run tests
        env:
          DATABASE_URL: postgresql+asyncpg://postgres:postgres@localhost:5432/loans
          REDIS_URL: redis://localhost:6379/0
          REPOSITORY_BACKEND: postgres
          CACHE_BACKEND: redis
          PUBLISHER_BACKEND: memory
        run: poetry run pytest

      - name: Truncate test tables
        if: always()
        env:
          DATABASE_URL: postgresql+asyncpg://postgres:postgres@localhost:5432/loans
        run: |
          python - <<'PY'
          import asyncio
          from sqlalchemy import text
          from loans.infrastructure.db import get_engine

          async def main() -> None:
              engine = get_engine()
              async with engine.begin() as conn:
                  await conn.execute(text("TRUNCATE TABLE loan_applications"))

          asyncio.run(main())
          PY
